from collections.abc import Iterable, Sequence
from typing import Any, SupportsFloat

import numpy as np

def rotation_matrix(vec1: Sequence[float] | np.ndarray, vec2: Sequence[float] | np.ndarray) -> np.ndarray: ...
def axis_rotation_matrix(
    vector: Sequence[float] | np.ndarray, angle: Sequence[float] | np.ndarray, unit: str = ...
) -> np.ndarray: ...
def distance_array(array1: np.ndarray, array2: np.ndarray) -> np.ndarray: ...
def angle(
    vec1: Iterable[str | bytes | SupportsFloat], vec2: Iterable[str | bytes | SupportsFloat], result_unit: str = ...
) -> np.float_: ...
def dihedral(
    p1: Iterable[str | bytes | SupportsFloat],
    p2: Iterable[str | bytes | SupportsFloat],
    p3: Iterable[str | bytes | SupportsFloat],
    p4: Iterable[str | bytes | SupportsFloat],
    unit: str = ...,
) -> np.float_: ...
def cell_shape(lattice: Sequence[float] | np.ndarray) -> list[Any]: ...
